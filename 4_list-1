1. list-1 > first_last6 

Question:
Given an array of ints, return True if 6 appears as either the first or last element in the array. The array will be length 1 or more.

Check for these cases:
first_last6([1, 2, 6]) → True
first_last6([6, 1, 2, 3]) → True
first_last6([13, 6, 1, 2, 3]) → False

Solution: 
def first_last6(nums):
    if nums[0] == 6 or nums[len(nums)-1] == 6:
        print("True")
    else:
        print("False")

first_last6([1, 2, 6]) #→ True
first_last6([6, 1, 2, 3]) #→ True
first_last6([13, 6, 1, 2, 3]) #→ False
#----------------------------------------#

#----------------------------------------#
2. list-1 > same_first_last

Question:
Given an array of ints, return True if the array is length 1 or more, and the first element and the last element are equal.

Check for these cases:
same_first_last([1, 2, 3]) → False
same_first_last([1, 2, 3, 1]) → True
same_first_last([1, 2, 1]) → True

Solution: 
def same_first_last(nums):
    if len(nums) >= 1 and nums[0] == nums[len(nums)-1]:
        print("True")
    else:
        print("False")

same_first_last([1, 2, 3]) #→ False
same_first_last([1, 2, 3, 1]) #→ True
same_first_last([1, 2, 1]) #→ True
#----------------------------------------#

#----------------------------------------#
3. list-1 > make_pi 

Question:
Return an int array length 3 containing the first 3 digits of pi, {3, 1, 4}.

Check for these cases:
make_pi() → [3, 1, 4]

Solution: 
#----------------------------------------#

#----------------------------------------#
4. list-1 > common_end

Question:
Given 2 arrays of ints, a and b, return True if they have the same first element or they have the same last element. Both arrays will be length 1 or more.

Check for these cases:
common_end([1, 2, 3], [7, 3]) → True
common_end([1, 2, 3], [7, 3, 2]) → False
common_end([1, 2, 3], [1, 3]) → True

Solution: 
#----------------------------------------#

#----------------------------------------#
5. list-1 > sum3

Question:
Given an array of ints length 3, return the sum of all the elements.

Check for these cases:
sum3([1, 2, 3]) → 6
sum3([5, 11, 2]) → 18
sum3([7, 0, 0]) → 7

Solution: 
#----------------------------------------#

#----------------------------------------#
6. list-1 > rotate_left3 

Question:
Given an array of ints length 3, return an array with the elements "rotated left" so {1, 2, 3} yields {2, 3, 1}.

Check for these cases:
rotate_left3([1, 2, 3]) → [2, 3, 1]
rotate_left3([5, 11, 9]) → [11, 9, 5]
rotate_left3([7, 0, 0]) → [0, 0, 7]

Solution: 
#----------------------------------------#

#----------------------------------------#
7. list-1 > reverse3 

Question:
Given an array of ints length 3, return a new array with the elements in reverse order, so {1, 2, 3} becomes {3, 2, 1}.

Check for these cases:
reverse3([1, 2, 3]) → [3, 2, 1]
reverse3([5, 11, 9]) → [9, 11, 5]
reverse3([7, 0, 0]) → [0, 0, 7]

Solution: 
#----------------------------------------#

#----------------------------------------#
8. list-1 > max_end3 

Question:
Given an array of ints length 3, figure out which is larger, the first or last element in the array, and set all the other elements to be that value. Return the changed array.

Check for these cases:
max_end3([1, 2, 3]) → [3, 3, 3]
max_end3([11, 5, 9]) → [11, 11, 11]
max_end3([2, 11, 3]) → [3, 3, 3]

Solution: 
#----------------------------------------#

#----------------------------------------#
9. list-1 > sum2  

Question:
Given an array of ints, return the sum of the first 2 elements in the array. If the array length is less than 2, just sum up the elements that exist, returning 0 if the array is length 0.

Check for these cases:
sum2([1, 2, 3]) → 3
sum2([1, 1]) → 2
sum2([1, 1, 1, 1]) → 2

Solution: 
#----------------------------------------#

#----------------------------------------#
10. list-1 > middle_way 

Question:
Given 2 int arrays, a and b, each length 3, return a new array length 2 containing their middle elements.

Check for these cases:
middle_way([1, 2, 3], [4, 5, 6]) → [2, 5]
middle_way([7, 7, 7], [3, 8, 0]) → [7, 8]
middle_way([5, 2, 9], [1, 4, 5]) → [2, 4]

Solution: 
#----------------------------------------#

#----------------------------------------#
11. list-1 > make_ends  

Question:
Given an array of ints, return a new array length 2 containing the first and last elements from the original array. The original array will be length 1 or more.

Check for these cases:
make_ends([1, 2, 3]) → [1, 3]
make_ends([1, 2, 3, 4]) → [1, 4]
make_ends([7, 4, 6, 2]) → [7, 2]

Solution: 
#----------------------------------------#

#----------------------------------------#
12. list-1 > has23  

Question:
Given an int array length 2, return True if it contains a 2 or a 3.

Check for these cases:
has23([2, 5]) → True
has23([4, 3]) → True
has23([4, 5]) → False

Solution: 
#----------------------------------------#

#----------------------------------------#
